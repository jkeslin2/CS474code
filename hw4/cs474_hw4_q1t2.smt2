(set-logic QF_UF)

(declare-sort U 0)

(declare-const c U)
(declare-const d U)
(declare-const e U)

(declare-fun fi (U) U)
(declare-fun f (U U) U)

; writing out all of the formulas(first the permutations of associativity)
(assert (= (f (f c c) c) (f c (f c c))))
(assert (= (f (f c c) d) (f c (f c d))))
(assert (= (f (f c c) e) (f c (f c e))))
(assert (= (f (f c d) c) (f c (f d c))))
(assert (= (f (f c d) d) (f c (f d d))))
(assert (= (f (f c d) e) (f c (f d e))))
(assert (= (f (f c e) c) (f c (f e c))))
(assert (= (f (f c e) d) (f c (f e d))))
(assert (= (f (f c e) e) (f c (f e e))))
(assert (= (f (f d c) c) (f d (f c c))))
(assert (= (f (f d c) d) (f d (f c d))))
(assert (= (f (f d c) e) (f d (f c e))))
(assert (= (f (f d d) c) (f d (f d c))))
(assert (= (f (f d d) d) (f d (f d d))))
(assert (= (f (f d d) e) (f d (f d e))))
(assert (= (f (f d e) c) (f d (f e c))))
(assert (= (f (f d e) d) (f d (f e d))))
(assert (= (f (f d e) e) (f d (f e e))))
(assert (= (f (f e c) c) (f e (f c c))))
(assert (= (f (f e c) d) (f e (f c d))))
(assert (= (f (f e c) e) (f e (f c e))))
(assert (= (f (f e d) c) (f e (f d c))))
(assert (= (f (f e d) d) (f e (f d d))))
(assert (= (f (f e d) e) (f e (f d e))))
(assert (= (f (f e e) c) (f e (f e c))))
(assert (= (f (f e e) d) (f e (f e d))))
(assert (= (f (f e e) e) (f e (f e e))))
;the rest of the axioms
(assert (and ( = (f c e) c )  ( = (f e c) c ) ) )
(assert (and ( = (f e e) e )  ( = (f e e) e ) ) )
(assert (and ( = (f d e) d)  ( = (f e d) d ) ) )
(assert (and ( = (f c (fi c) ) e)  ( = (f (fi c) c ) e) ) )
(assert (and ( = (f e (fi e) ) e)  ( = (f (fi e) e ) e) ) )
(assert (and ( = (f d (fi d) ) e)  ( = (f (fi d) d ) e) ) )
; the statement
(assert (and (= (f c d) e) (= (f d c) e) (not (= d (fi c))) ))

(check-sat)
(get-model)
